// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MovieProject.Models;
using System;

namespace MovieProject.Migrations
{
    [DbContext(typeof(MovieProjectContext))]
    [Migration("20180831124143_Brnach")]
    partial class Brnach
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieProject.Models.Movie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("DirectorID");

                    b.Property<string>("Genre");

                    b.Property<decimal>("Price");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.HasIndex("DirectorID");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MovieProject.Models.MovieDirecotr", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("Genere");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("MovieDirecotr");
                });

            modelBuilder.Entity("MovieProject.Models.StoreBranch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BrnachName");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("OpeningHours");

                    b.HasKey("ID");

                    b.ToTable("StoreBranch");
                });

            modelBuilder.Entity("MovieProject.Models.Movie", b =>
                {
                    b.HasOne("MovieProject.Models.MovieDirecotr", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorID");
                });
#pragma warning restore 612, 618
        }
    }
}
