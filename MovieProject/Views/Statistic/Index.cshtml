<html>
<head>
    <script type="text/javascript" src="https://d3js.org/d3.v4.min.js"></script>
</head>
<body>
    <table class="Graghs">
        <tbody>
            <tr>
                <td id="ExpensiveMovies">
                    <h4>The most Expensive Movies</h4>
                </td>
                <td id="ChippestMovies">
                    <h4>The most Chippest Movies</h4>
                </td>
            </tr>
            <tr>
                <td id="Genre">
                    <h4>Movies order by genre</h4>
                </td>
                <td id="Suplliers">
                    <h4>Movies by suplliers</h4>
                </td>
            </tr>
            <tr>
              
            </tr>
        </tbody>
    </table>
</body>
</html>

@section Scripts {
    <script type="text/javascript">
		// Get the most expensive movies
		$.ajax({
			type: "GET", async: true, dataType: "json",
			url: '@Url.Action("GetMostExpensiveMovies", "Quereies")',
			data: { p_topToTake : 5},
			success: function (data) {
				if (data == undefined || data.length == 0) {
					d3.select("#ExpensiveMovies")
						.append("h3")
						.text("There is no data to show :(")
				}
				else {
					//Width and height
					var w = 300;
					var h = 450;
					var dataset = data.map(movie => (movie.price));
					var moviesNames = data.map(movie => (movie.title));

					var xScale = d3.scaleBand()
						.domain(d3.range(dataset.length))
						.rangeRound([0, w])
						.paddingInner(0.05);

					var yScale = d3.scaleLinear()
						.domain([0, d3.max(dataset)])
						.range([0, h]);

					//Create SVG element
					var svg = d3.select("#ExpensiveMovies")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

					//Create bars
					svg.selectAll("rect")
						.data(dataset)
						.enter()
						.append("rect")
						.attr("x", function (d, i) {
							return xScale(i);
						})
						.attr("y", function (d) {
							return h - yScale(d);
						})
						.attr("width", xScale.bandwidth())
						.attr("height", function (d) {
							return yScale(d);
						})
						.attr("fill", function (d) {
							return "rgb(0, 0, " + Math.round(d * 10) + ")";
						});

					//Create labels
					svg.selectAll("text")
						.data(dataset)
						.enter()
						.append("text")
						.text(function (d) {
							return d;
						})
						.attr("text-anchor", "middle")
						.attr("x", function (d, i) {
							return xScale(i) + xScale.bandwidth() / 2;
						})
						.attr("y", function (d) {
							return h - yScale(d) + 14;
						})
						.attr("font-family", "sans-serif")
						.attr("font-size", "11px")
						.attr("fill", "white");

					svg.selectAll("g")
						.data(moviesNames)
						.enter()
						.append("text")
						.text(function (d) {
							return d;
						})
						.attr("text-anchor", "middle")
						.attr("x", function (d, i) {
							return xScale(i) + xScale.bandwidth() / 2;
						})
						.attr("y", function (d) {
							return h - 5;
						})
						.attr("font-family", "sans-serif")
						.attr("font-size", "17px")
						.attr("fill", "white");
				}
			}
		})

		//Get the most chippest movies
		$.ajax({
			type: "GET", async: true, dataType: "json",
			url: '@Url.Action("GetChippestMovies", "Quereies")',
			data: { p_topToTake: 5 },
			success: function (data) {
				if (data == undefined || data.length == 0) {
					d3.select("#ChippestMovies")
						.append("h3")
						.text("There is no data to show :(")
				}
				else {
					//Width and height
					var w = 300;
					var h = 450;
					var dataset = data.map(movie => (movie.price));
					var moviesNames = data.map(movie => (movie.title));

					var xScale = d3.scaleBand()
						.domain(d3.range(dataset.length))
						.rangeRound([0, w])
						.paddingInner(0.05);

					var yScale = d3.scaleLinear()
						.domain([0, d3.max(dataset)])
						.range([0, h]);

					//Create SVG element
					var svg = d3.select("#ChippestMovies")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

					//Create bars
					svg.selectAll("rect")
						.data(dataset)
						.enter()
						.append("rect")
						.attr("x", function (d, i) {
							return xScale(i);
						})
						.attr("y", function (d) {
							return h - yScale(d);
						})
						.attr("width", xScale.bandwidth())
						.attr("height", function (d) {
							return yScale(d);
						})
						.attr("fill", "green");

					//Create labels
					svg.selectAll("text")
						.data(dataset)
						.enter()
						.append("text")
						.text(function (d) {
							return d;
						})
						.attr("text-anchor", "middle")
						.attr("x", function (d, i) {
							return xScale(i) + xScale.bandwidth() / 2;
						})
						.attr("y", function (d) {
							return h - yScale(d) + 14;
						})
						.attr("font-family", "sans-serif")
						.attr("font-size", "11px")
						.attr("fill", "white");

					svg.selectAll("g")
						.data(moviesNames)
						.enter()
						.append("text")
						.text(function (d) {
							return d;
						})
						.attr("text-anchor", "middle")
						.attr("x", function (d, i) {
							return xScale(i) + xScale.bandwidth() / 2;
						})
						.attr("y", function (d) {
							return h - 5;
						})
						.attr("font-family", "sans-serif")
						.attr("font-size", "17px")
						.attr("fill", "white");
				}
			}
		});

		// Movies order by genre
			$.ajax({
			type: "GET", async: true, dataType: "json",
			url: '@Url.Action("GetMoviesByGenre", "Quereies")',
			data: { p_topToTake : 5},
				success: function (data) {
					if (data == undefined || data.length == 0) {
						d3.select("#Genre")
							.append("h3")
							.text("There is no data to show :(")
					}
					    else {
						//Width and height
						var w = 200;
						var h = 450;

						var dataset = data.map(movie => (movie.length));
						var moviesNames = data.map(movie => (movie[0].genre));

						var xScale = d3.scaleBand()
							.domain(d3.range(dataset.length))
							.rangeRound([0, w])
							.paddingInner(0.05);

						var yScale = d3.scaleLinear()
							.domain([0, d3.max(dataset)])
							.range([0, h]);

						//Create SVG element
						var svg = d3.select("#Genre")
							.append("svg")
							.attr("width", w)
							.attr("height", h);

						//Create bars
						svg.selectAll("rect")
							.data(dataset)
							.enter()
							.append("rect")
							.attr("x", function (d, i) {
								return xScale(i);
							})
							.attr("y", function (d) {
								return h - yScale(d);
							})
							.attr("width", xScale.bandwidth())
							.attr("height", function (d) {
								return yScale(d);
							})
							.attr("fill", function (d) {
								return "rgb(0, 0, " + Math.round(d * 10) + ")";
							});

						//Create labels
						svg.selectAll("text")
							.data(dataset)
							.enter()
							.append("text")
							.text(function (d) {
								return d;
							})
							.attr("text-anchor", "middle")
							.attr("x", function (d, i) {
								return xScale(i) + xScale.bandwidth() / 2;
							})
							.attr("y", function (d) {
								return h - yScale(d) + 14;
							})
							.attr("font-family", "sans-serif")
							.attr("font-size", "11px")
							.attr("fill", "white");

						svg.selectAll("g")
							.data(moviesNames)
							.enter()
							.append("text")
							.text(function (d) {
								return d;
							})
							.attr("text-anchor", "middle")
							.attr("x", function (d, i) {
								return xScale(i) + xScale.bandwidth() / 2;
							})
							.attr("y", function (d) {
								return h - 5;
							})
							.attr("font-family", "sans-serif")
							.attr("font-size", "17px")
							.attr("fill", "white");
					}
				}
        })

        // Movies according to suppliers
        $.ajax({
            type: "GET", async: true, dataType: "json",
            url: '@Url.Action("GetMoviesGroupedBySuppliers", "Quereies")',
            data: { p_topToTake: 5 },
            success: function (data) {
                debugger;
                if (data == undefined || data.length == 0) {
                    d3.select("#Suppliers")
                        .append("h3")
                        .text("There is no data to show :(")
                }
                else {
                    //Width and height
                    var w = 200;
                    var h = 450;

                    var dataset = data.map(movie => (movie.length));
                    var moviesNames = data.map(movie => (movie[0].genre));

                    var xScale = d3.scaleBand()
                        .domain(d3.range(dataset.length))
                        .rangeRound([0, w])
                        .paddingInner(0.05);

                    var yScale = d3.scaleLinear()
                        .domain([0, d3.max(dataset)])
                        .range([0, h]);

                    //Create SVG element
                    var svg = d3.select("#Suplliers")
                        .append("svg")
                        .attr("width", w)
                        .attr("height", h);

                    //Create bars
                    svg.selectAll("rect")
                        .data(dataset)
                        .enter()
                        .append("rect")
                        .attr("x", function (d, i) {
                            return xScale(i);
                        })
                        .attr("y", function (d) {
                            return h - yScale(d);
                        })
                        .attr("width", xScale.bandwidth())
                        .attr("height", function (d) {
                            return yScale(d);
                        })
                        .attr("fill", function (d) {
                            return "rgb(0, 0, " + Math.round(d * 10) + ")";
                        });

                    //Create labels
                    svg.selectAll("text")
                        .data(dataset)
                        .enter()
                        .append("text")
                        .text(function (d) {
                            return d;
                        })
                        .attr("text-anchor", "middle")
                        .attr("x", function (d, i) {
                            return xScale(i) + xScale.bandwidth() / 2;
                        })
                        .attr("y", function (d) {
                            return h - yScale(d) + 14;
                        })
                        .attr("font-family", "sans-serif")
                        .attr("font-size", "11px")
                        .attr("fill", "white");

                    svg.selectAll("g")
                        .data(moviesNames)
                        .enter()
                        .append("text")
                        .text(function (d) {
                            return d;
                        })
                        .attr("text-anchor", "middle")
                        .attr("x", function (d, i) {
                            return xScale(i) + xScale.bandwidth() / 2;
                        })
                        .attr("y", function (d) {
                            return h - 5;
                        })
                        .attr("font-family", "sans-serif")
                        .attr("font-size", "17px")
                        .attr("fill", "white");
                }
            }
        })
    </script>
}

@section styles {
    <link rel="stylesheet" type="text/css" href="~/css/Statistic.css" />
}
